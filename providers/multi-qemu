#!/usr/bin/env ruby
# SPDX-License-Identifier: MulanPSL-2.0+
# frozen_string_literal: true

require 'fileutils'

# Run multiple QEMU in parallel
HOSTNAME = ARGV[0] || "vm-hi1620-2p8g--#{ENV['USER']}"
NR_VM = ARGV[1] || 1

def run(seqno)
  loop do
    start_time = Time.new
    hostname = "#{HOSTNAME}-#{seqno}"
    log_file = "/srv/cci/serial/logs/#{hostname}"

    File.open(log_file, 'w') do |f|
      f.puts "\nThis qemu starts at #{start_time.strftime('%Y-%m-%d %H:%M:%S')}"
    end

    FileUtils.mkdir_p(hostname) unless File.exist?(hostname)
    FileUtils.cd(hostname)
    system(
      { 'hostname' => hostname },
      ENV['CCI_SRC'] + '/providers/qemu.sh'
    )

    duration = ((Time.new - start_time) / 60).round(2)
    File.open(log_file, 'a') do |f|
      f.puts "\nThis qemu takes #{duration} minutes"
    end

    # sleep 5s is for fluentd to collect it's log
    sleep(5)
  end
end

def save_pid(arr)
  FileUtils.rm('pid') if File.exist?('pid')
  f = File.new('pid', 'a')
  arr.each do |i|
    f.puts(i)
  end
  f.close
end

def multiqemu
  pids = []
  NR_VM.to_i.times do |i|
    pid = Process.fork do
      run i
    end
    pids << pid
  end
  return pids
end

if $PROGRAM_NAME == __FILE__
  pids = multiqemu
  save_pid pids
end
